# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: socketzero
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: SocketZero Login
      clientId: uds-package-socketzero
      redirectUris:
        - "https://socketzero.{{ .Values.domain }}/oauth2/callback/saml"
      protocol: saml
      defaultClientScopes:
        - "mapper-saml-email-email"
        - "mapper-saml-username-login"
        - "mapper-saml-username-name"

      attributes:
        saml.client.signature: "false"

      secretName: {{ .Values.sso.secretName }}
      # This secret template configures sso for the application. Will need updated based on application required configuration
      secretTemplate:
        socketzero.sso.config.key: |
            example.auth.saml.enabled: {{ .Values.sso.enabled }}
            example.auth.saml.applicationId: clientField(clientId)
            example.auth.saml.providerName: {{ .Values.sso.saml.providerName }}
            example.auth.saml.providerId: https://sso.{{ .Values.domain }}/realms/uds
            example.auth.saml.loginUrl: https://sso.{{ .Values.domain }}/realms/uds/protocol/saml
            example.auth.saml.user.login: login
            example.auth.saml.user.name: name
            example.auth.saml.user.email: email
            example.auth.saml.certificate.secured: clientField(samlIdpCertificate)
  {{- end }}
  # Customize network policies and expose services via istio
  network:
    expose:
      - service: socketzero
        podLabels:
          app: socketzero
        gateway: tenant
        host: socketzero
        port: 9997
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      # Custom rules for unanticipated scenarios
      {{- with .Values.additionalNetworkAllow }}
      {{ toYaml . | nindent 6 }}
      {{- end }}
